// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UrbanMarketAPI.Data;

#nullable disable

namespace UrbanMarketAPI.Migrations
{
    [DbContext(typeof(UrbanMarketContext))]
    partial class UrbanMarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UrbanMarketAPI.Models.CategoriaProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.EncomendaFeirante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<float>("ValorFinal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("EncomendasFeirantes");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.Feirante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataNasc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Pin")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Telem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Feirantes");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aprovado")
                        .HasColumnType("bit");

                    b.Property<int>("IdFrom")
                        .HasColumnType("int");

                    b.Property<int>("IdTo")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoFeiranteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoFeiranteId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaProdutoId")
                        .HasColumnType("int");

                    b.Property<string>("LinkImagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UnidMedidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaProdutoId");

                    b.HasIndex("UnidMedidaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.ProdutoFeirante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FeiranteId")
                        .HasColumnType("int");

                    b.Property<float>("PrecoUni")
                        .HasColumnType("real");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<float>("Quantidade")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FeiranteId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutosFeirantes");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.UnidadeMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UniMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UnidadesMedidas");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.Pedido", b =>
                {
                    b.HasOne("UrbanMarketAPI.Models.ProdutoFeirante", "ProdutoFeirante")
                        .WithMany("Pedidos")
                        .HasForeignKey("ProdutoFeiranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdutoFeirante");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.Produto", b =>
                {
                    b.HasOne("UrbanMarketAPI.Models.CategoriaProduto", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UrbanMarketAPI.Models.UnidadeMedida", "UnidMedida")
                        .WithMany("Produtos")
                        .HasForeignKey("UnidMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("UnidMedida");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.ProdutoFeirante", b =>
                {
                    b.HasOne("UrbanMarketAPI.Models.Feirante", "Feirante")
                        .WithMany("ProdutosPublicados")
                        .HasForeignKey("FeiranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UrbanMarketAPI.Models.Produto", "Produto")
                        .WithMany("PublicacoesDoProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feirante");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.CategoriaProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.Feirante", b =>
                {
                    b.Navigation("ProdutosPublicados");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.Produto", b =>
                {
                    b.Navigation("PublicacoesDoProduto");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.ProdutoFeirante", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("UrbanMarketAPI.Models.UnidadeMedida", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
